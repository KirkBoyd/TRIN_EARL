List of ROS commands & Things to Do 

=============================
*** Pre-reqs for compiling *** 
==============================
-Install Eigen library 
	1. Install tar.bz2 from website and follow INSTALL instruction)
	2. If Cmake error, find FindEigen3.cmake file and put in it appropriate place, then rename it back to FindEigen.cmake
-Install orocos-bfl (sudo apt-get install ros-jade-navigation) 
-Install dependencies for openslam-gmapping (sudo apt-get install ros-jade-openslam-gmapping)
-Install popt.h (sudo apt-get install libpopt-dev)
-Install xbox drivers
 1.sudo apt-add-repository -y ppa:rael-gc/ubuntu-xboxdrv
 2. sudo apt-get update
 3. sudo apt-get install ubuntu-xboxdrv
 4. sudo apt-get install --install-recommends jstest* joystick xboxdrv
-Two-webcam setup
 1. sudo apt-get install v4l-utils
 2. sudo rmmod uvcvideo
 3. sudo modprobe uvcvideo quirks=128
----
Optional
---
-sudo apt-get install ros-jade-imu-tools
-in .bashrc, put:
	source /opt/ros/jade/setup.bash
	source /catkin_ws/install/setup.bash
-Run /catkin_ws/devel/setup.bash for good measure

------------------------------------
Shortcuts 
-----------------------------------

Ctrl + K  - Indents files automatically (if setup so)

-------------------
Teleoperation
-------------------

roslaunch turtlebot_teleop keyboard_teleop.launch --screen

rosrun turtlesim turtle_teleop_key /turtle1/cmd_vel:=/mybot/cmd_vel
rosrun turtlebot_teleop turtlebot_teleop_key /turtlebot_teleop/cmd_vel:=/mybot/cmd_vel

------------------------
Running the robot
------------------------

Start
------------------
Open terminal 
cd ~/catkin_ws
source devel/setup.bash


Run if file change 
------------------
catkin_make --pkg rosserial_server 


Man_drive location: ~/catkin_ws/src/rosserial/rosserial_server/src/man_drive_update.cpp

Run commands 
------------
roslaunch rosserial_server man_drive.launch
sudo xboxdrv --silent 

password: Trin_EARL

----------------
ROS Commands
----------------

rostopic echo /topic_name
rostopic pub my_topic std_msgs/String "hello there"

------------------
Plugin initialization 
--------------------

Example 1. Path-planner (http://wiki.ros.org/navigation/Tutorials/Writing%20A%20Global%20Path%20Planner%20As%20Plugin%20in%20ROS)

-----------------------------
Transforms
----------------------------
rosrun tf tf_echo turtle1 turtle2
rosrun tf view_frames
rosrun tf tf_monitor turtle1 turtle2
rosrun rqt_graph rqt_graph

---------------------
Connecting to the Cameras
----------------------

ssh -X ubuntu@Jetson1
ssh -X ubuntu@Jetson2

source devel/setup.bash

roslaunch image_transport_package steam.launch

------------------------
Launching Phidgets
----------------------

roslaunch phidgets_imu imu.launch

----------------------
Changes to fix after pulling from Github
----------------------

----------
Launch file 
----------
ns  => stands for namespace to launch the node in

===========
Other command line commands
===========
lsusb - lists usb connections 
(can be used to check if Kinect is properly powered and connected, etc.)

===========
Camera calibration
===========

Refer: http://wiki.ros.org/camera_calibration

The camera calibration file is stored in /.ros/camera_info <=required for rectification

rosrun camera_calibration cameracalibrator.py --size 8x6 --square 0.108 image:=/my_camera/image camera:=/my_camera

Size (8x6) refers to the corners where four corners meet
Square refers to the size of the squares in meters

==========
Webcam launch
===========
roslaunch usb_cam usb_cam-test.launch


TODOS
==========
https://www.youtube.com/watch?v=LzyMQVSJvzY
=Forbot?? point distance?? 
=Seam time
