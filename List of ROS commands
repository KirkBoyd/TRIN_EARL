List of ROS commands & Things to Do 

------------------------------------
Shortcuts 
-----------------------------------

Ctrl + K  - Indents files automatically

-------------------
Teleoperation
-------------------

roslaunch turtlebot_teleop keyboard_teleop.launch --screen

rosrun turtlesim turtle_teleop_key /turtle1/cmd_vel:=/mybot/cmd_vel
rosrun turtlebot_teleop turtlebot_teleop_key /turtlebot_teleop/cmd_vel:=/mybot/cmd_vel

------------------------
Running the robot
------------------------

Start
------------------
Open terminal 
cd ~/catkin_ws
source devel/setup.bash


Run if file change 
------------------
catkin_make --pkg rosserial_server 


Man_drive location: ~/catkin_ws/src/rosserial/rosserial_server/src/man_drive_update.cpp

Run commands 
------------
roslaunch rosserial_server man_drive.launch
sudo xboxdrv --silent 

password: Trin_EARL


----------------
Connecting to Android
---------------

 export ROS_MASTER_URI=http://192.168.1.204:11311/ (or whatever the IP)
 roscore
 -Then, connect to the above IP on the Android phone

Testing for connection
 rosnode list
     rosnode ping /android_sensors_driver


----------------
ROS Commands
----------------

rostopic echo /topic_name
rostopic pub my_topic std_msgs/String "hello there"

------------------
Plugin initialization 
--------------------

Example 1. Path-planner (http://wiki.ros.org/navigation/Tutorials/Writing%20A%20Global%20Path%20Planner%20As%20Plugin%20in%20ROS)
-----------------
1. Write class header that follows the navigation stack planner file (e.g. nav_core::BaseGlobalPlanner)
2. Implement the class for the previous header
3. Add to CMake and compile into libary
4. Initialize as plugin
 -1. Write XML file
 -2. Register as plug-in in package.xml
5. Input into the launch file as one of params of move_base node

rospack plugins --attrib=plugin nav_core       (lists all plugins)

---------------------
Connecting to the Cameras
----------------------

ssh -X ubuntu@Jetson1
ssh -X ubuntu@Jetson2

source devel/setup.bash

roslaunch image_transport_package steam.launch

------------------------
Launching Phidgets
----------------------


----------------------
Connecting to Kinect
------------------------

roslaunch freenect_launch freenect.launch rgb_frame_id:=camera_rgb_optical_frame depth_frame_id:=camera_depth_optical_frame