<?xml version="1.0"?>

<!-- 
     Launch file for the physical IGVC run on Xbox controller
-->
<launch>

    <!-- <param name="/use_sim_time" value="true" /> -->

    <node pkg="rviz" type="rviz" name="rviz" />
    
    <node name="motor_test" pkg="igvc" type="motor_commander.py">
        <param name="port"  type="string" value="/dev/ttyUSB0" />
    </node>
    <node name="joy" pkg="joy" type="joy_node" />
    <node name="xbox_drv" pkg="igvc" type="xbox_drive" />

    <!-- ************* Sensors *************** -->

    <!--
    <node pkg="igvc" type="fake_scan" name="laser_scan">
        <param name="frame_id" value="laser_frame"/>
        <param name="calibrate_time" type="bool" value="true"/>  
        <param name="intensity" type="bool" value="false"/>
        <param name="min_ang" value="0"/>   
        <param name="max_ang" value="3.14"/>    
        <param name="cluster" value="1"/>
    </node>
    --> 

    <node name="rplidarNode" pkg="rplidar_ros"  type="rplidarNode">
        <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>  
        <param name="serial_baudrate"     type="int"    value="115200"/>
        <param name="frame_id"            type="string" value="laser_frame"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="angle_min"           value="3.14159/2"/>
        <param name="angle_max"           value="-3.14159/2"/>
    </node>

    <!-- include file="$(find usb_cam)/launch/usb_cam-test.launch" respawn="true" / -->
    
    <!-- 

    <node pkg="nmea_navsat_driver" type="nmea_serial_driver" name="nmea_serial_driver">
        <param name="port" value="/dev/ttyUSB1" />
    </node>

    <node pkg="gps_common" type="utm_odometry_node" name="gps_conv">
        <remap from="odom" to="vo" />
        <remap from="fix" to="/gps/fix" />
        <param name="rot_covariance" value="99999" />
        <param name="frame_id" value="base_link" />
    </node>

    -->


    <!-- ********** Mapping and Odometry **************** -->

    <!-- <remap from="odom" to="odometry/filtered" /> -->

<!--    <include file="$(find igvc)/launch/hector_slam.launch" /> -->

<!--     <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" respawn="true">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_link" />
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>

        <param name="odom_used" value="false"/>

        <param name="imu_used" value="false" />

        <remap from="vo" to="odom"/>
        <param name="vo_used" value="true"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node> -->

<!--    <remap from="odom" to="odometry/filtered" /> -->

<!--    <include file="$(find robot_localization)/launch/ekf_template.launch" />
    <include file="$(find robot_localization)/launch/ekf_template2.launch" />
 -->
 
        <arg name="odom_frame_id"   default="odom"/>
        <arg name="base_frame_id"   default="base_link"/>
        <arg name="global_frame_id" default="map"/>
        <arg name="odom_topic" default="odom" />
        <arg name="laser_topic" default="lidar_scan" />


<!--        <remap from="scan" to="lidar_scan" />
 -->        <!-- <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" /> -->
        <!-- </node>
          <param name="base_frame" value="/base_link" />
          <param name="odom_frame" value="/odom" />
          <param name="map_update_interval" value="15.0"/>
          <param name="maxUrange" value="5.0"/>
          <param name="minRange" value="-0.5"/>
          <param name="sigma" value="0.05"/>
          <param name="kernelSize" value="1"/>
          <param name="lstep" value="0.05"/>
          <param name="astep" value="0.05"/>
          <param name="iterations" value="5"/>
          <param name="lsigma" value="0.075"/>
          <param name="ogain" value="3.0"/>
          <param name="lskip" value="0"/>
          <param name="minimumScore" value="100"/>
          <param name="srr" value="0.01"/>
          <param name="srt" value="0.02"/>
          <param name="str" value="0.01"/>
          <param name="stt" value="0.02"/>
          <param name="linearUpdate" value="0.7"/>
          <param name="angularUpdate" value="0.7"/>
          <param name="temporalUpdate" value="-0.5"/>
          <param name="resampleThreshold" value="0.5"/>
          <param name="particles" value="50"/>
          <param name="xmin" value="-50.0"/>
          <param name="ymin" value="-50.0"/>
          <param name="xmax" value="50.0"/>
          <param name="ymax" value="50.0"/>
          <param name="delta" value="0.05"/>
          <param name="llsamplerange" value="0.05"/>
          <param name="llsamplestep" value="0.05"/>
          <param name="lasamplerange" value="0.005"/>
          <param name="lasamplestep" value="0.005"/>
          <param name="transform_publish_period" value="0.1"/>
        </node> -->



        <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">

            <rosparam>
                  map_frame: map
                  odom_frame: odom
                  map_update_interval: 1.0
                  maxUrange: 30.0
                  maxRange: 60.0
                  sigma: 0.05
                  kernelSize: 1
                  lstep: 0.01
                  astep: 0.02
                  iterations: 5
                  lsigma: 0.075
                  ogain: 3.0
                  lskip: 0
                  minimumScore: 0
                  linearUpdate: 1.0
                  angularUpdate: 0.5
                  temporalUpdate: -1.0
                  resampleThreshold: 0.5
                  particles: 30
                  xmin: -100.0
                  ymin: -100.0
                  xmax: 100.0
                  ymax: 100.0
                  delta: 0.05
                  llsamplerange: 0.01
                  llsamplestep: 0.01
                  lasamplerange: 0.005
                  lasamplestep: 0.005
                  occ_thresh: 0.25
                  tf_delay: 0.01
                  base_frame: base_link
            </rosparam>


            <remap from="scan" to="lidar_scan" />

        <!-- remap from="/scan" to="/cam_scan" / -->
        </node>



        <!-- include file="$(find viso2_ros)/launch/demo.launch" / -->

        <!-- node pkg="igvc" type="blink_rate" name="blink_rate">
                <param name="blink" value="true" />
        </node -->


    <!-- DEBUG

    <node pkg="rosbag" type="record" name="rosbag_record" args="-o /odometry/filtered /base_link /lidar_scan /laser_frame /fix /imu/data /scan /odom" />

    -->
    
    <!-- ************ Controllers ************* --> 

     <!-- 
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find igvc)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find igvc)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
        <rosparam file="$(find igvc)/param/local_costmap_params.yaml" command="load" />   
        <rosparam file="$(find igvc)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find igvc)/param/dwa_local_planner_params.yaml" command="load" />
        <rosparam file="$(find igvc)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find igvc)/param/global_planner_params.yaml" command="load" />
        <rosparam file="$(find igvc)/param/navfn_global_planner_params.yaml" command="load" />
        <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
        <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
        <param name="local_costmap/global_frame" value="$(arg global_frame_id)"/> 
        <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>

        <param name="DWAPlannerROS/global_frame_id" value="$(arg global_frame_id)"/>
    </node>
-->
    <!-- 
    <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" />
    -->

    <node pkg="igvc" type="diff_ty.py" name="diff_ty" />

    <!-- For testing odom --> 
    <!-- 
    <node pkg="tf" type="static_transform_publisher" name="odom_test_tf"  args="0 0 0 0 0 0 /map /base_link 100" />
 -->
    <!-- ******** Transforms *********** -->

<!--    node pkg="tf" type="static_transform_publisher" name="base_to_camera_tf" args="0.1 0 0.75 0 0 0 /base_link /camera 50" /  -->
    <!-- node pkg="tf" type="static_transform_publisher" name="base_to_laser_tf"  args="0 0 0 -90 0 0 /base_link /laser_frame 10" respawn="true" / -->

    <!-- node pkg="tf" type="static_transform_publisher" name="base_to_imu_tf" args="0 0 0 0 0 0 /base_link /imu 50" / -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_odom_tf" args="0 0 0 0 0 0 /odom /base_link 50" />`
<!--     <node pkg="tf" type="static_transform_publisher" name="base_to_laser_tf"  args="0 0 0 67.5 0 0 /base_link /laser_frame 50" />
        -->
    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_tf"  args="0 0 0 180 0 0 /base_link /laser_frame 50" />
    <!-- node pkg="tf" type="static_transform_publisher" name="base_to_gps_tf"  args="0 1 0 0 0 0 /base_link /gps 50" / -->

</launch>